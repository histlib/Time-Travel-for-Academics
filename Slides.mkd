% Time-Travel for Academics
% Jacob Levernier
% May 18, 2015

# Get your digital life in order, and protect yourself from yourself

Test

<div class="notes">
This presentation is meant to be used with reveal.js (which you need to download and place in the same directory as these slides). The slides are generated with [Pandoc](http://pandoc.org/demo/example9/producing-slide-shows-with-pandoc.html):  

pandoc -t dzslides -i -s Slides.mkd -o Slides_Build.html --slide-level 2

(-i is "incremental" mode for lists. --slide-level sets the header level that should trigger new slides)

(Note that per [here](https://github.com/jgm/pandoc-templates/pull/78), you may need to tempoararily change the css and js locations to not include ".min" in the name (or copy them and rename them with ".min").

</div>

##  

![[PHD Comics](http://www.phdcomics.com/comics/archive/phd101212s.gif)](images/phd_comics_version_control_101212s.gif)

## What to do?

Well...

## And another slide

* One
* Two 
* Three

. . .

And more

<div class="notes">
This is my note.

- It can contain markdown
- like this list

</div>


# Git

TODO: Incorporate Caitlin's questions.
TODO: Add a note on DVCS vs. Dropbox

# Real-World Examples

## Code Editing

## Manuscript Writing

## The Basic Workflow

1. Make git aware of the files you want to track  
	<span class="fragment">`git init`</span>
	<span class="fragment">, `git add`</span>
	<span class="fragment">, `git clone`</span>
1. Take a snapshot ("commit") whenever you do something. Add a commit message.  
	<span class="fragment">`git commit --message "I deleted the first part of the Introduction,`  
	`but added new citations to the Literature Review."`</span>
1. That's it!  
	<span class="fragment">As needed, use `git log`</span>
	<span class="fragment">, `git diff`</span>
	<span class="fragment">, and `git checkout`</span>

# The Command Line

The bare essentials you might need for working with Git:

* `ls` = LiSt files in a folder.
* `cd` = "Change Directory"
* `man [command]` = "Show me the manual for this command."
	* For example, `man ls` will show and explain all of `ls`'s options.
	* `ls -a` will show hidden files (like the `.git` directory!)
	* `ls -l` will show the files in a list format (with each file on one line)
* This slide is to help you use Git at a basic level. <span class="fragment highlight-blue">Do not use command-line commands that you don't know.</span> The command line doesn't ask "Are you sure?"


# GitEye

## `git init`

## `git status`

## `git add`

## `git commit -m "Reminder.."`

## `git log`

## `git checkout`

## `git diff`

# GitHub and Related Services

## What is GitHub?

* See also BitBucket

## Public vs. Private

## `git clone`

## `git push`

## `git pull`

## Branches

